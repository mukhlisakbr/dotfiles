# =============================
# Comprehensive Zsh Configuration
# =============================

# -----------------------------
# History Configuration
# -----------------------------
HISTSIZE=10000                 # Number of commands to keep in memory
SAVEHIST=10000                 # Number of commands to save in the history file

# History options
setopt HIST_IGNORE_DUPS        # Ignore duplicate commands in history
setopt HIST_IGNORE_ALL_DUPS    # Remove older duplicate commands
setopt HIST_IGNORE_SPACE       # Ignore commands starting with a space
setopt HIST_SAVE_NO_DUPS       # Do not save duplicate commands
setopt HIST_VERIFY             # Show command before running after history expansion
setopt SHARE_HISTORY           # Share history across multiple Zsh sessions

# -----------------------------
# Shell Options
# -----------------------------
setopt CORRECT                 # Suggest corrections for mistyped commands
setopt NO_CASE_GLOB            # Enable case-insensitive globbing
setopt AUTO_CD                 # Allow 'cd' by just typing a directory name

# -----------------------------
# Completion System
# -----------------------------
# Load and initialize Zsh completion system
autoload -Uz compinit          # Load Zsh completion system
compinit                       # Initialize completion

# Completion performance optimization
zstyle ':completion:*' use-cache on              # Enable completion cache
zstyle ':completion:*' cache-path ~/.zsh/cache   # Set cache directory

# -----------------------------
# Prompt Initialization
# -----------------------------
eval "$(starship init zsh)"    # Load Starship as the prompt

# -----------------------------
# Zinit Plugin Manager
# -----------------------------
# Initialize Zinit plugin manager
source /opt/homebrew/opt/zinit/zinit.zsh

# Suggest commands as you type. Loads asynchronously after the prompt.
zinit ice wait lucid atload'_zsh_autosuggest_start'
zinit light zsh-users/zsh-autosuggestions

# Highlight syntax as you type. Must load last for proper behavior.
zinit ice wait lucid
zinit light zsh-users/zsh-syntax-highlighting

# -----------------------------
# Tool Integrations
# -----------------------------
# zoxide - smart cd command
eval "$(zoxide init zsh)"

# eza - modern ls replacement
export EZA_CONFIG_DIR="$HOME/.config/eza"

# -----------------------------
# Aliases
# -----------------------------
# File listing aliases
alias eza="eza --icons --sort=type"
alias l="eza"
alias ll="eza -l"
alias lla="eza -la"

# Development tool aliases
alias lg="lazygit"
alias ld="lazydocker"
alias pn="pnpm"
alias wip='git add . && git commit -m "wip" && git push'

# -----------------------------
# Bat Configuration
# -----------------------------
# Syntax highlighting theme for bat (cat replacement)
#export BAT_THEME="GitHub"  # Uncomment to set a specific theme

# -----------------------------
# FZF Configuration
# -----------------------------
# Base command for fd integration
FD_BASE="fd --strip-cwd-prefix"

# FZF command configurations
export FZF_DEFAULT_COMMAND="$FD_BASE --type f"     # Generic fzf command
export FZF_CTRL_T_COMMAND="$FD_BASE --type f"      # For CTRL-T (files)
export FZF_ALT_C_COMMAND="$FD_BASE --type d"       # For ALT-C (directories)

# FZF preview configurations
export FZF_CTRL_T_OPTS="--preview 'bat -n --color=always {}'"  # File preview with bat
export FZF_ALT_C_OPTS="--preview 'tree -C {} | head -200'"     # Directory preview with tree

# Initialize FZF key bindings and completion
source <(fzf --zsh)

# -----------------------------
# Development Environment
# -----------------------------
# Sublime Text editor
export PATH="/Applications/Sublime Text.app/Contents/SharedSupport/bin:$PATH"

# Java Development Kit
export JAVA_HOME=/Library/Java/JavaVirtualMachines/zulu-17.jdk/Contents/Home

# Android SDK configuration
export ANDROID_HOME=$HOME/Library/Android/sdk
export PATH=$PATH:$ANDROID_HOME/emulator          # Android emulator
export PATH=$PATH:$ANDROID_HOME/platform-tools    # ADB and fastboot
export PATH=$PATH:$ANDROID_HOME/build-tools/35.0.0 # Build tools

# XDG Base Directory specification
export XDG_CONFIG_HOME="$HOME/.config"

# -----------------------------
# Custom Functions
# -----------------------------
# Yazi file manager with cd integration
function y() {
  local tmp="$(mktemp -t "yazi-cwd.XXXXXX")" cwd
  yazi "$@" --cwd-file="$tmp"
  if cwd="$(command cat -- "$tmp")" && [ -n "$cwd" ] && [ "$cwd" != "$PWD" ]; then
    builtin cd -- "$cwd"
  fi
  rm -f -- "$tmp"
}

# Gitignore generator
function gi() { curl -sLw "\n" https://www.toptal.com/developers/gitignore/api/$@ ;}

# -----------------------------
# Runtime and Package Managers
# -----------------------------
# Herd PHP development environment
export HERD_PHP_84_INI_SCAN_DIR="/Users/ghost/Library/Application Support/Herd/config/php/84/"
export PATH="/Users/ghost/Library/Application Support/Herd/bin/":$PATH

# Windsurf AI-powered editor
export PATH="/Users/ghost/.codeium/windsurf/bin:$PATH"

# Bun - fast JavaScript runtime and package manager
export BUN_INSTALL="$HOME/.bun"
export PATH="$BUN_INSTALL/bin:$PATH"

# PNPM - fast, disk space efficient package manager
export PNPM_HOME="/Users/ghost/Library/pnpm"
case ":$PATH:" in
  *":$PNPM_HOME:"*) ;;  # Already in PATH
  *) export PATH="$PNPM_HOME:$PATH" ;;  # Add to PATH
esac

# -----------------------------
# Terminal Configuration
# -----------------------------
export TERM=xterm-256color

# =============================
# End of Configuration
# =============================
